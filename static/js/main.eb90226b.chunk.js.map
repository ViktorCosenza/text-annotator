{"version":3,"sources":["components/Login/LoginForm.tsx","components/AnnotationText.tsx","utils/onthology.tsx","components/Annotation/Annotation.tsx","components/Annotation/AnnotationList.tsx","components/Annotator.tsx","components/helpers/FileUploader.tsx","components/helpers/FilePicker.tsx","components/TopBar.tsx","services/client.tsx","components/App.tsx","serviceWorker.ts","index.tsx","components/Login/Login.tsx"],"names":["LoginForm","onLogin","useState","username","password","form","setForm","handleChange","e","persist","oldForm","target","name","value","Grid","container","direction","spacing","item","children","TextField","required","onChange","label","Button","onClick","variant","style","width","AnnotationText","text","handleSelection","hasSelection","handleAdd","onSelection","onAdd","Text","Paper","padding","Typography","onDoubleClick","onMouseUp","justify","disabled","onthology","CustomSelect","inputLabel","values","selected","FormControl","minWidth","InputLabel","Select","map","v","MenuItem","key","CustomTextInput","Annotation","onDelete","annotation","firstValues","el","secondValues","first","find","thirdValues","second","wrap","flex","third","reference","Tooltip","title","Checkbox","checked","explicit","color","marginLeft","AnnotationList","handleDelete","handleSave","annotations","onSave","a","id","ActionBar","AppBar","position","size","Annotator","selection","setSelection","Container","disableGutters","maxWidth","s","window","getSelection","newSelection","anchorOffset","focusOffset","flexGrow","FileUploader","props","accept","multiple","type","display","onInput","handleUpload","htmlFor","component","FilePicker","handleSelect","files","currentFile","isOpen","setIsOpen","Dialog","onClose","open","DialogTitle","List","f","filename","touched","CustomListItem","ListItem","autoFocus","button","ListItemAvatar","Avatar","ListItemText","primary","TopBar","handleFileSelect","align","client","axios","create","baseURL","submitAnnotation","console","log","App","setFiles","selectedFile","setSelectedFile","setAnnotation","useEffect","r","FileReader","onload","result","readAsText","readFile","file","oldFile","Array","from","idx","sort","b","newFile","field","newValues","Error","oldAnnotation","length","toString","newAnnotations","filter","BigUpload","Card","CardHeader","margin","CardContent","Boolean","location","hostname","match","ReactDOM","render","loggedIn","setLoggedIn","Box","backgroundColor","alignItems","height","method","headers","data","qs","stringify","usuario","senha","auth","then","catch","error","finally","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.eb90226b.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nimport TextField from '@material-ui/core/TextField'\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\n\n\ntype LoginFormProps = {\n  onLogin: ({username, password}) => void\n} \n\nexport const LoginForm:React.FC<LoginFormProps> = ({onLogin}) => {\n  const [form, setForm] = useState({username: \"\", password:\"\"})\n\n  const handleChange = e => {\n      e.persist()\n      setForm(oldForm => ({\n        ...oldForm,\n        [e.target.name]: e.target.value\n      }))\n    }\n\n  const handleSubmit = () => onLogin(form)\n\n  return (\n    <form>\n      <Grid container direction=\"column\" spacing={4}> \n        <Grid item children={<TextField required onChange={handleChange} value={form.username} name=\"username\" label=\"Login\"/>}/>\n        <Grid item children={<TextField required onChange={handleChange} value={form.password} name=\"password\" label=\"Senha\"/>}/>\n        <Grid item children={<Button onClick={handleSubmit} variant=\"contained\" style={{width: \"100%\"}}>LOGIN</Button>}/>\n      </Grid>\n    </form>\n  )\n}\n","import React from 'react';\nimport {\n  Button,\n  Grid,\n  Paper,\n  Typography,\n} from '@material-ui/core'\n\ntype AnnotationTextProps = {\n  text: string\n  handleSelection: (s: React.MouseEvent<HTMLElement, MouseEvent>) => void\n  hasSelection: boolean\n  handleAdd: () => void\n}\n\nexport const AnnotationText: React.FC<AnnotationTextProps> = ({text, handleSelection, hasSelection, handleAdd}) => {\n  return (\n    <Text \n      onSelection={handleSelection}\n      onAdd={handleAdd}\n      text={text}\n      hasSelection={hasSelection}\n    />\n  )\n}\n\ntype TextProps = {\n  onSelection: (s: React.MouseEvent<HTMLElement, MouseEvent>) => void,\n  onAdd: () => void,\n  text: string,\n  hasSelection: boolean\n}\n\nexport const Text: React.FC<TextProps> = ({onSelection, hasSelection, text, onAdd}) => {\n  return (\n    <Paper style={{ padding: '1rem' }}>\n      <Grid container direction=\"column\">\n        <Grid item  children=\n          {\n            <Typography onDoubleClick={onSelection} onMouseUp={onSelection}>\n              {text}\n            </Typography>\n          }\n        />\n        <Grid item children=\n          {\n              <Grid container justify=\"flex-end\" >\n                <Grid item children=\n                  {\n                    <Button \n                      variant=\"outlined\" \n                      onClick={onAdd} \n                      disabled={hasSelection} \n                      children=\"Adicionar Seleção\" />\n                  } \n                />\n              </Grid>\n          }\n        />\n      </Grid>\n    </Paper>\n  );\n}\n\n","export const onthology = [\n  {\n    name: \"Instalações\",\n    children: [\n      {\n        name: \"Instalações do Quarto\",\n        children: [\n          \"Ar condicionado\",\n          \"TV\",\n          \"Isolamento Acústico\"\n        ]\n      },\n      {\n        name: \"Instalações do Banheiro\",\n        children: [\n          \"Toalha\",\n          \"Chuveiro\"\n        ]\n      } \n    ]\n  },\n  {\n    name: \"Ponto de Interesse\",\n    children: [\n      {\n        name: \"Cidade\",\n        children: []\n      },\n      {\n        name: \"Endereço\",\n        children: [\"Rua\"]\n      }\n    ]\n  }\n]","import React from 'react';\nimport Delete from '@material-ui/icons/Delete'\n\nimport {onthology} from '../../utils/onthology'\n\nimport {AnnotationType} from '../../types/AnnotationType'\n\nimport {\n  Checkbox,\n  Grid,\n  InputLabel,\n  MenuItem,\n  FormControl, \n  Select,\n  TextField,\n  Tooltip,\n  Button\n} from '@material-ui/core'\n\ntype AnnotationProps = {\n  onDelete: () => void\n  handleChange: (a: any) => any\n  annotation: AnnotationType\n}\n\n\nconst Annotation: React.FC<AnnotationProps> = ({onDelete, handleChange, annotation}) => {\n  const firstValues = onthology.map(el => el.name)\n  const secondValues = annotation.first\n    ? onthology\n      .find(el => annotation.first === el.name)\n      .children.map(el => el.name)\n    : []\n\n  const thirdValues = annotation.second\n    ? onthology\n      .find(el => annotation.first === el.name).children\n      .find(el => annotation.second === el.name).children\n    : []\n\n  \n\n  return (\n    <Grid container wrap=\"nowrap\" justify=\"space-between\" spacing={2}>\n      <Grid item container wrap=\"nowrap\" justify=\"space-around\" spacing={2} style={{ flex: '2' }}>\n        <Grid item children={\n          <CustomSelect \n            onChange={handleChange('first')}\n            selected={annotation.first} \n            values={firstValues}\n            inputLabel=\"Nível 1\" />\n          } style={{ flex: \"1\" }} />\n        <Grid item children={\n          <CustomSelect \n            onChange={handleChange('second')}\n            selected={annotation.second}\n            values={secondValues}\n            inputLabel=\"Nível 2\" />\n          } style={{ flex: \"1\" }} />\n        <Grid item children={\n          <CustomSelect \n            onChange={handleChange('third')}\n            selected={annotation.third}\n            values={thirdValues}\n            inputLabel=\"Nível 3\" />\n          } style={{ flex: \"1\" }} />\n      </Grid>\n      <Grid item container justify=\"space-between\" wrap=\"nowrap\"  style={{flex: '1'}}>\n        <Grid \n          item \n          children=\n            {\n              <CustomTextInput \n                value={annotation.reference}\n                onChange={handleChange(\"reference\")}\n              />\n            } style={{ flex: '3' }}\n        />\n        <Grid item container justify=\"center\" style={{flex: '1'}}>\n          <Grid item> \n            <Tooltip title=\"Explícito\">\n              <Checkbox \n                onChange={handleChange(\"explicit\")}\n                checked={annotation.explicit} \n                color='primary' \n                style={{flex: '1', marginLeft: '0px'}}\n              />\n            </Tooltip>\n          </Grid>\n          <Grid item>\n              <Tooltip title=\"Deletar\">\n                <Button \n                  onClick={onDelete}\n                  children={<Delete />} \n                />\n              </Tooltip>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n\ntype CustomSelectProps = {\n  inputLabel: string\n  values: string[]\n  selected: string\n  onChange: (e: React.ChangeEvent<{value: string}>) => void\n}\n\nconst CustomSelect: React.FC<CustomSelectProps> = ({inputLabel, values, selected, onChange}) => {\n  return (\n    <FormControl style={{ minWidth: '100%' }}>\n      <InputLabel>{inputLabel}</InputLabel>\n      <Select\n        value={selected}\n        onChange={onChange}\n      >\n        {\n          values.map(v => <MenuItem key={v} value={v}>{v}</MenuItem>)\n        }\n      </Select>\n    </FormControl>\n  )\n}\n\ntype CustomTextInputProps = {\n  value: string\n  onChange: (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void \n}\n\nconst CustomTextInput: React.FC<CustomTextInputProps> = ({onChange, value}) => {\n  return (\n    <FormControl style={{ minWidth: '100%' }}>\n      <TextField onChange={onChange} label=\"Digite Aqui\" value={value}/>\n    </FormControl>\n  )\n}\n\nexport default Annotation;","import React from 'react';\nimport Add from '@material-ui/icons/Add'\nimport Save from '@material-ui/icons/Save'\n\nimport {\n  Button,\n  Paper,\n  Grid,\n  AppBar\n} from '@material-ui/core'\n\nimport Annotation from './Annotation'\n\nimport {AnnotationType} from '../../types/AnnotationType'\n\ntype AnnotationListProps = {\n  annotations: AnnotationType[]\n  handleChange: any\n  handleAdd: () => void\n  handleDelete: any\n  handleSave: () => void\n}\n\nexport const AnnotationList: React.FC<AnnotationListProps> = ({handleAdd, handleChange, handleDelete, handleSave, annotations}) => {\n  return (\n    <>\n      <ActionBar \n        onSave={handleSave}\n        onAdd={handleAdd}\n      />\n      <Paper style={{ padding: '1rem' }}>\n        {\n          annotations.map((a: any) => \n            <Annotation key={a.id} handleChange={handleChange(a.id)} onDelete={handleDelete(a.id)} annotation={a}/>\n          )\n        }\n      </Paper>\n    </>\n  );\n}\n\ntype ActionBarProps = {\n  onAdd: (a: any) => void\n  onSave: () => void\n}\n\nconst ActionBar: React.FC<ActionBarProps> = ({onAdd, onSave}) => {\n  return (\n    <AppBar position=\"static\" color='default' style={{ padding: '1rem' }}>\n      <Grid container wrap=\"nowrap\" justify=\"space-between\">\n        <Grid item children=\n          {\n            <Button\n              onClick={onSave}\n              size=\"small\"\n              variant='outlined'\n              color=\"primary\">\n              <Save />\n            </Button>\n          }\n        />\n        <Grid item children=\n          {\n            <Button\n              onClick={onAdd}\n              size=\"small\"\n              variant='outlined'\n              color=\"secondary\">\n              <Add />\n            </Button>\n          }\n        />\n      </Grid>\n    </AppBar>\n  );\n}\n","import React, { useState } from 'react';\nimport {\n  Container,\n  Grid,\n} from '@material-ui/core'\n\nimport {AnnotationText} from './AnnotationText'\nimport {AnnotationList} from './Annotation/AnnotationList'\n\ntype AnnotatorProps = {\n  annotation: any\n  text: string\n  handleChange: any\n  handleAdd: (s:Selection | \"\") => () => void\n  handleDelete: any\n  handleSave: () => void\n}\n\nexport const Annotator: React.FC<AnnotatorProps> = ({annotation, text, handleChange, handleAdd, handleSave, handleDelete}) => {\n  const [selection, setSelection] = useState<Selection | null>(null);\n\n  const handleSelection = () => {\n    const s = window.getSelection()\n    const newSelection = s ? (s.anchorOffset - s.focusOffset === 0 ? null : s) : null\n    setSelection(newSelection)\n  }\n\n  return (\n    <>\n      <Container disableGutters maxWidth=\"xl\" style={{ padding: '1rem', flex: '1' }}>\n        <Grid container direction=\"column\" justify=\"space-evenly\" spacing={2}>\n          <Grid item children=\n            {\n              <AnnotationText\n                text={text}\n                hasSelection={!selection}\n                handleSelection={handleSelection}\n                handleAdd={handleAdd(selection)}\n              />\n            } style={{ flexGrow: 1 }} />\n          <Grid item children=\n            {\n              <AnnotationList \n                annotations={annotation} \n                handleChange={handleChange}\n                handleSave={handleSave} \n                handleDelete={handleDelete} \n                handleAdd={handleAdd(\"\")} \n              />\n            } style={{ flexGrow: 1 }} />\n        </Grid>\n      </Container>\n    </>\n  );\n}\n","import React from 'react'\n\nimport Button from '@material-ui/core/Button'\nimport CloudUpload from '@material-ui/icons/CloudUpload'\n\ntype FileUploaderProps = {\n  handleUpload: any\n}\n\nexport const FileUploader: React.FC<FileUploaderProps> = props => {\n  return (\n    <>\n      <input\n        accept=\"text/*\"\n        id=\"upload-files\"\n        multiple\n        type=\"file\"\n        style={{ display: 'none' }}\n        onInput={props.handleUpload}\n      />\n      <label htmlFor=\"upload-files\" >\n        <Button variant=\"contained\" component=\"span\">\n          <CloudUpload />\n        </Button>\n      </label>\n    </>\n  )\n}\n","import React, { useState } from 'react'\nimport Avatar from '@material-ui/core/Avatar'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Button from '@material-ui/core/Button'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport List from '@material-ui/core/List'\n\nimport MenuIcon from '@material-ui/icons/Menu'\nimport DoneIcon from '@material-ui/icons/Done'\nimport NoteIcon from '@material-ui/icons/Note'\nimport TurnetInIcon from '@material-ui/icons/TurnedIn'\n\n\ntype FilePickerProps = {\n  files: Array<{\n    filename: string,\n    touched: boolean\n  }>\n  currentFile: string\n  handleSelect: (f: string) => void\n}\n  \nexport const FilePicker: React.FC<FilePickerProps> = ({handleSelect, files, currentFile}) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const handleClick = () => setIsOpen(true)\n  const handleClose = () => setIsOpen(false)\n  return (\n    <>\n      <Button onClick={handleClick} variant=\"contained\"><MenuIcon /></Button>\n      <Dialog onClose={handleClose} open={isOpen}>\n        <DialogTitle>Textos:</DialogTitle>\n        <List>\n          {\n            files.map((f: any) => \n              <CustomListItem \n                key={f.filename}\n                handleSelect={(f: string) => {\n                  setIsOpen(false)\n                  handleSelect(f)\n                }}\n                filename={f.filename}\n                touched={f.touched}\n                currentFile={currentFile}\n              />\n            )\n          }\n        </List>\n      </Dialog>\n    </>\n  )\n}\n\ntype CustomListItemProps = {\n  filename: string,\n  handleSelect: (f: string) => void,\n  touched: boolean,\n  currentFile: string\n}\n\nconst CustomListItem: React.FC<CustomListItemProps> = ({handleSelect, filename, touched, currentFile}) => {\n  return (\n    <ListItem \n      autoFocus \n      button\n      onClick={() => handleSelect(filename)}  \n    >\n      <ListItemAvatar>\n        <Avatar>\n          <NoteIcon />\n        </Avatar>\n      </ListItemAvatar>\n      <ListItemText primary={filename}/>\n      {\n        currentFile === filename \n        ? <TurnetInIcon />\n        : touched \n          ? <DoneIcon style={{color: 'green', marginLeft: '16px'}}/> \n          : <></>\n      }\n    </ListItem>\n  )\n}","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport AppBar from '@material-ui/core/AppBar'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\nimport {FilePicker} from './helpers/FilePicker'\nimport {FileUploader} from './helpers/FileUploader'\n\ntype TopbarProps = {\n  handleUpload: (a: any) => void,\n  handleFileSelect: (f: string) => void\n  files: Array<{\n    filename: string,\n    touched: boolean\n  }>\n  currentFile: string\n}\n\nexport const TopBar: React.FC<TopbarProps> = ({handleFileSelect, handleUpload, files, currentFile}) => {\n  return (\n    <AppBar position=\"static\">\n      <Grid container wrap=\"nowrap\" justify=\"space-between\" style={{ padding: \"0.5rem\" }}>\n        <Grid item children={<Typography align=\"center\" variant=\"h4\" children=\"FAMA\" />} />\n        <Grid item container justify=\"flex-end\" spacing={1}>\n          <Grid item children={<FilePicker currentFile={currentFile} handleSelect={handleFileSelect} files={files} />} />\n          <Grid item children={<FileUploader handleUpload={handleUpload} />} />\n          <Grid item children={<Button variant='contained'>Ajuda</Button>} />\n          <Grid item children={<Button variant=\"contained\" children=\"LOGOUT\" />} />\n        </Grid>\n      </Grid>\n    </AppBar>\n  );\n}","import axios from 'axios'\nimport qs from 'qs'\n\nconst client = axios.create({\n  baseURL: 'https://cors-anywhere.herokuapp.com/http://famahotel.tk/git'\n})\n\nexport const auth = ({username, password}) => client('valida.php', {\n  method: \"POST\",\n  headers: { \"content-type\": \"application/x-www-form-urlencoded\" },\n  data: qs.stringify({usuario: username, senha: password})\n})\n\nexport const submitAnnotation = console.log\n\nexport const submitAnnotationFORREAL = (texts: any) => {\n  texts.map(t => client('salvaAnotacoes.php', {\n      method: \"POST\",\n      headers: { \"content-type\": \"application/x-www-form-urlencoded\" },\n      data: qs.stringify({\n        textoVal: t.text,\n        featureVal: t.annotation.first,\n        subfeatureVal: t.annotation.second,\n        subsubfeatureVal: t.annotation.third,\n        eximVal: t.annotation.explicit,\n        termVal: t.reference\n      })\n    })\n  )\n}","import React, { useState, useEffect } from 'react'\n\nimport Grid from '@material-ui/core/Grid'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport Dialog from '@material-ui/core/Dialog'\n\nimport { Annotator } from './Annotator'\nimport { FileUploader } from './helpers/FileUploader'\nimport { TopBar } from './TopBar'\n\nimport { submitAnnotation } from '../services/client'\n\nexport const App: React.FC = () => {\n  const [files, setFiles] = useState<any[]>([])\n  const [selectedFile, setSelectedFile] = useState<any>(null)\n  const [annotation, setAnnotation] = useState([])\n\n  useEffect(() => {\n    if (selectedFile === null) return\n    if (selectedFile.text !== null) return\n\n    const readFile = (f: File) => {\n      const r = new FileReader()\n      r.onload = () => {\n        setFiles(files => files.map(f => f.id === selectedFile.id ? {...f, text: r.result}: f))\n        setSelectedFile({...selectedFile, text: r.result})\n      }\n      r.readAsText(f)\n    }\n    readFile(selectedFile.file)\n  }, [selectedFile])\n\n  useEffect(() => {\n    if (selectedFile === null) return\n    setAnnotation(selectedFile.annotation)\n  }, [selectedFile])\n\n  useEffect(() => {\n    if (selectedFile === null) return\n    setSelectedFile(oldFile => \n      ({\n        ...oldFile, \n        annotation: annotation\n      }))\n  }, [annotation])\n\n  \n  const handleAnnotationChange = (id:number) => (field: string) => (e: React.ChangeEvent<{value: string}>) => {\n    let newValues\n    switch(field) {\n      case \"first\":\n        newValues = {\n          first: e.target.value,\n          second: \"\",\n          third: \"\"\n        }\n        break\n      case \"second\": \n        newValues = {\n          second: e.target.value,\n          third: \"\"\n        }\n        break \n      case \"third\":\n        newValues = {third: e.target.value}\n        break\n      case \"reference\":\n        newValues = {reference: e.target.value}\n        break\n      case \"explicit\": \n        break\n      default: throw Error(\"Invalid field parameter\")\n    }\n    setAnnotation(oldAnnotation => \n      oldAnnotation.map(a => a.id === id ? {\n        ...a,\n        ...newValues,\n        ...(field === \"explicit\" ? {explicit: !a.explicit} : {})\n      } : a))\n  }\n\n  const handleSave = () => {\n    submitAnnotation({\n      text: selectedFile.text,\n      annotation: selectedFile.annotation\n    })\n  }\n\n  const handleAdd = (selection: Selection | null) => () => {\n    setAnnotation([\n      ...annotation, \n      {\n        id: annotation.length + 1,\n        first: \"\",\n        second: \"\",\n        third: \"\",\n        explicit: false,\n        reference: selection ? selection.toString() : \"\", \n      }\n    ])\n  }\n\n  const handleDelete = (id: number) => () => {\n    const newAnnotations = annotation.filter(a => a.id !== id)\n    setAnnotation(newAnnotations)\n  }\n\n  const handleUpload = ({ target: { files } }: any) => {\n    files = Array.from(files).map((f, idx) => ({\n      id: idx,\n      file: f, \n      touched: false, \n      text: null,\n      annotation: []\n    })).sort((a, b) => a.id < b.id ? -1 : 1)\n\n    setFiles(files)\n    setSelectedFile(files[0])\n  }\n\n  const handleFileSelect = (filename: string) => {\n    setFiles(\n      files\n        .map(f => f.id === selectedFile.id ? {...f, ...selectedFile, touched: true} : f)\n        .sort((a, b) => a.id < b.id ? -1 : 1)\n    )\n    const newFile = files.find(f => f.file.name === filename)\n    setSelectedFile(newFile)\n  }\n\n  return (\n    <>\n      <TopBar\n        handleUpload={handleUpload}\n        handleFileSelect={handleFileSelect}\n        files={files.map((f: any) => ({ filename: f.file.name, touched: f.touched }))}\n        currentFile={selectedFile ? selectedFile.file.name : null}\n      />\n      {\n        selectedFile === null\n          ? <BigUpload \n              handleUpload={handleUpload}\n            />\n          : <Annotator \n              annotation={selectedFile.annotation}\n              handleChange={handleAnnotationChange}\n              handleAdd={handleAdd}\n              handleDelete={handleDelete}\n              handleSave={handleSave}\n              text={selectedFile.text}\n            />\n      }\n\n    </>\n  )\n}\n\ntype BigUploadProps = {\n  handleUpload: ({ target: { files } }: any) => void\n}\n\nconst BigUpload: React.FC<BigUploadProps> = ({handleUpload}) => {\n  return (\n    <Dialog open={true} >\n      <Grid >\n        <Card>\n          <CardHeader \n            title=\"Envie arquivos para anotar\"\n            style={{margin: \"32px 16px\"}}\n          />\n          <CardContent>\n            <Grid container justify=\"center\">\n              <Grid item children={<FileUploader handleUpload={handleUpload} />}/>\n            </Grid>\n        </CardContent>\n        </Card>\n      </Grid>\n    </Dialog>\n  )\n} \n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {Login} from './components/Login/Login';\nimport * as serviceWorker from './serviceWorker';\nimport 'typeface-roboto'\n\nReactDOM.render(<Login />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, {useState} from 'react'\n\nimport {LoginForm} from './LoginForm'\nimport {App} from '../App'\n\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport Grid from '@material-ui/core/Grid'\nimport Box from '@material-ui/core/Box'\n\nimport {auth} from '../../services/client'\n\n\nexport const Login: React.FC = () => {\n  const [loggedIn, setLoggedIn] = useState(false)\n\n  const handleLogin = ({username, password}) => {\n    console.log('Requested...')\n    auth({username, password})\n      .then(console.log)\n      .catch(console.error)\n      .finally(() => setLoggedIn(true))\n    \n  } \n\n  if (loggedIn) \n    return (<App />)\n  else \n    return (\n      <Box style={{backgroundColor: 'pink'}}>\n        <Grid container item alignItems=\"center\" justify=\"center\" style={{height: \"100vh\"}}>\n          <Grid item children={\n            <Card>\n              <CardContent>\n                <LoginForm onLogin={handleLogin}/>\n              </CardContent>\n            </Card>\n          }/>\n        </Grid>\n      </Box>\n    )\n}"],"sourceRoot":""}