{"version":3,"sources":["components/AnnotationText.tsx","utils/onthology.tsx","components/Annotation/Annotation.tsx","components/Annotation/AnnotationList.tsx","components/Annotator.tsx","components/helpers/FileUploader.tsx","components/helpers/FilePicker.tsx","components/TopBar.tsx","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["AnnotationText","text","handleSelection","hasSelection","handleAdd","onSelection","onAdd","Text","Paper","style","padding","Grid","container","direction","item","children","Typography","onDoubleClick","onMouseUp","justify","Button","variant","onClick","disabled","onthology","name","CustomSelect","inputLabel","values","selected","onChange","FormControl","minWidth","InputLabel","Select","value","map","v","MenuItem","key","CustomTextInput","props","TextField","label","defaultValue","Annotation","onDelete","id","useState","first","second","third","annotation","setAnnotation","firstValues","el","secondValues","thirdValues","handleChange","field","e","newValue","find","target","Error","wrap","spacing","flex","Tooltip","title","Checkbox","color","marginLeft","AnnotationList","handleDelete","annotations","a","ActionBar","AppBar","position","alert","size","Annotator","selection","setSelection","R","window","getSelection","s","anchorOffset","focusOffset","Container","disableGutters","maxWidth","flexGrow","FileUploader","accept","multiple","type","display","onInput","handleUpload","htmlFor","component","FilePicker","handleSelect","files","currentFile","isOpen","setIsOpen","Dialog","onClose","open","DialogTitle","List","f","filename","touched","CustomListItem","ListItem","autoFocus","button","ListItemAvatar","Avatar","ListItemText","primary","TopBar","handleFileSelect","align","BigUpload","Card","CardHeader","margin","CardContent","Boolean","location","hostname","match","ReactDOM","render","setFiles","selectedFile","setSelectedFile","useEffect","r","FileReader","onload","result","readAsText","readFile","file","Array","from","idx","sort","b","newFile","String","newAnnotations","length","filter","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.63ea9020.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  Button,\n  Grid,\n  Paper,\n  Typography,\n} from '@material-ui/core'\n\ntype AnnotationTextProps = {\n  text: string\n  handleSelection: (s: React.MouseEvent<HTMLElement, MouseEvent>) => void\n  hasSelection: boolean\n  handleAdd: () => void\n}\n\nexport const AnnotationText: React.FC<AnnotationTextProps> = ({text, handleSelection, hasSelection, handleAdd}) => {\n  return (\n    <Text \n      onSelection={handleSelection}\n      onAdd={handleAdd}\n      text={text}\n      hasSelection={hasSelection}\n    />\n  )\n}\n\ntype TextProps = {\n  onSelection: (s: React.MouseEvent<HTMLElement, MouseEvent>) => void,\n  onAdd: () => void,\n  text: string,\n  hasSelection: boolean\n}\n\nexport const Text: React.FC<TextProps> = ({onSelection, hasSelection, text, onAdd}) => {\n  return (\n    <Paper style={{ padding: '1rem' }}>\n      <Grid container direction=\"column\">\n        <Grid item  children=\n          {\n            <Typography onDoubleClick={onSelection} onMouseUp={onSelection}>\n              {text}\n            </Typography>\n          }\n        />\n        <Grid item children=\n          {\n              <Grid container justify=\"flex-end\" >\n                <Grid item children=\n                  {\n                    <Button \n                      variant=\"outlined\" \n                      onClick={onAdd} \n                      disabled={hasSelection} \n                      children=\"Adicionar Seleção\" />\n                  } \n                />\n              </Grid>\n          }\n        />\n      </Grid>\n    </Paper>\n  );\n}\n\n","export const onthology = [\n  {\n    name: \"Instalações\",\n    children: [\n      {\n        name: \"Instalações do Quarto\",\n        children: [\n          \"Ar condicionado\",\n          \"TV\",\n          \"Isolamento Acústico\"\n        ]\n      },\n      {\n        name: \"Instalações do Banheiro\",\n        children: [\n          \"Toalha\",\n          \"Chuveiro\"\n        ]\n      } \n    ]\n  },\n  {\n    name: \"Ponto de Interesse\",\n    children: [\n      {\n        name: \"Cidade\",\n        children: []\n      },\n      {\n        name: \"Endereço\",\n        children: [\"Rua\"]\n      }\n    ]\n  }\n]","import React, {useState} from 'react';\nimport Delete from '@material-ui/icons/Delete'\n\nimport {onthology} from '../../utils/onthology'\n\nimport {\n  Checkbox,\n  Grid,\n  InputLabel,\n  MenuItem,\n  FormControl, \n  Select,\n  TextField,\n  Tooltip,\n  Button\n} from '@material-ui/core'\n\ntype AnnotationProps = {\n  onDelete: (a: any) => void\n  id: number\n  defaultValue: String\n}\n\n\nconst Annotation: React.FC<AnnotationProps> = ({onDelete, id, defaultValue}) => {\n  const [annotation, setAnnotation] = useState({first: null, second: null, third: null})\n  \n  const firstValues = onthology.map(el => el.name)\n  const secondValues = annotation.first\n    ? annotation.first.children.map(el => el.name)\n    : []\n\n  const thirdValues = annotation.second\n    ? annotation.second.children\n    : []\n\n  const handleChange = (field: string) => (e: React.ChangeEvent<{value: string}>) => {\n    let newValue\n    switch(field) {\n      case \"first\":\n        newValue = onthology.find(el => el.name === e.target.value)\n        break\n      case \"second\": \n        newValue = annotation.first.children.find(el => el.name === e.target.value)\n        break \n      case \"third\": \n        newValue = e.target.value\n        break\n      default: throw Error(\"Invalid field parameter\")\n    }\n    setAnnotation({\n      ...annotation,\n      [field]: newValue\n    })\n  }\n\n  return (\n    <Grid container wrap=\"nowrap\" justify=\"space-between\" spacing={2}>\n      <Grid item container wrap=\"nowrap\" justify=\"space-around\" spacing={2} style={{ flex: '2' }}>\n        <Grid item children={\n          <CustomSelect \n            onChange={handleChange('first')}\n            selected={annotation.first ? annotation.first.name : \"\"} \n            values={firstValues}\n            inputLabel=\"Nível 1\" />\n          } style={{ flex: \"1\" }} />\n        <Grid item children={\n          <CustomSelect \n            onChange={handleChange('second')}\n            selected={annotation.second ? annotation.second.name : \"\"}\n            values={secondValues}\n            inputLabel=\"Nível 2\" />\n          } style={{ flex: \"1\" }} />\n        <Grid item children={\n          <CustomSelect \n            onChange={handleChange('third')}\n            selected={annotation.third ? annotation.third.name : \"\"}\n            values={thirdValues}\n            inputLabel=\"Nível 3\" />\n          } style={{ flex: \"1\" }} />\n      </Grid>\n      <Grid item container justify=\"space-between\" wrap=\"nowrap\"  style={{flex: '1'}}>\n        <Grid item children={<CustomTextInput defaultValue={defaultValue}/>} style={{ flex: '3' }}/>\n        <Grid item container justify=\"center\" style={{flex: '1'}}>\n          <Grid item> \n            <Tooltip title=\"Explícito\">\n              <Checkbox color='primary' style={{flex: '1', marginLeft: '0px'}}/>\n            </Tooltip>\n          </Grid>\n          <Grid item>\n              <Tooltip title=\"Deletar\">\n                <Button \n                  onClick={() => onDelete(id)}\n                  children={<Delete />} \n                />\n              </Tooltip>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n\ntype CustomSelectProps = {\n  inputLabel: string\n  values: string[]\n  selected: string\n  onChange: (e: React.ChangeEvent<{value: string}>) => void\n}\n\nconst CustomSelect: React.FC<CustomSelectProps> = ({inputLabel, values, selected, onChange}) => {\n  return (\n    <FormControl style={{ minWidth: '100%' }}>\n      <InputLabel>{inputLabel}</InputLabel>\n      <Select\n        value={selected}\n        onChange={onChange}\n      >\n        {\n          values.map(v => <MenuItem key={v} value={v}>{v}</MenuItem>)\n        }\n      </Select>\n    </FormControl>\n  )\n}\n\ntype CustomTextInputProps = {\n  defaultValue?: String\n}\n\nconst CustomTextInput: React.FC<CustomTextInputProps> = props => {\n  return (\n    <FormControl style={{ minWidth: '100%' }}>\n      <TextField label=\"Digite Aqui\" defaultValue={props.defaultValue}/>\n    </FormControl>\n  )\n}\n\nexport default Annotation;","import React from 'react';\nimport Add from '@material-ui/icons/Add'\nimport Save from '@material-ui/icons/Save'\n\nimport {\n  Button,\n  Paper,\n  Grid,\n  AppBar\n} from '@material-ui/core'\n\nimport Annotation from './Annotation'\n\n\ntype AnnotationListProps = {\n  annotations: any\n  handleAdd: any\n  handleDelete: any\n}\n\nexport const AnnotationList: React.FC<AnnotationListProps> = ({handleAdd, handleDelete, annotations}) => {\n  return (\n    <>\n      <ActionBar onAdd={handleAdd}/>\n      <Paper style={{ padding: '1rem' }}>\n        {\n          annotations.map((a: any) => \n            <Annotation key={a.id} id={a.id} onDelete={handleDelete} defaultValue={a.text}/>\n          )\n        }\n      </Paper>\n    </>\n  );\n}\n\ntype ActionBarProps = {\n  onAdd: (a: any) => void\n}\n\nconst ActionBar: React.FC<ActionBarProps> = ({onAdd}) => {\n  return (\n    <AppBar position=\"static\" color='default' style={{ padding: '1rem' }}>\n      <Grid container wrap=\"nowrap\" justify=\"space-between\">\n        <Grid item children=\n          {\n            <Button\n              onClick={() => alert(\"Not implemented :'(\")}\n              size=\"small\"\n              variant='outlined'\n              color=\"primary\">\n              <Save />\n            </Button>\n          }\n        />\n        <Grid item children=\n          {\n            <Button\n              onClick={onAdd}\n              size=\"small\"\n              variant='outlined'\n              color=\"secondary\">\n              <Add />\n            </Button>\n          }\n        />\n      </Grid>\n    </AppBar>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport * as R from 'rambda'\n\nimport {\n  Container,\n  Grid,\n} from '@material-ui/core'\n\nimport {AnnotationText} from './AnnotationText'\nimport {AnnotationList} from './Annotation/AnnotationList'\n\ntype AnnotatorProps = {\n  annotation: any\n  text: string\n  handleAdd: any\n  handleDelete: any\n}\n\nexport const Annotator: React.FC<AnnotatorProps> = ({annotation, text,  handleAdd, handleDelete}) => {\n  const [selection, setSelection] = useState<Selection | null>(null);\n\n  const handleSelection = R.pipe(\n    window.getSelection,\n    s => s ? (s.anchorOffset - s.focusOffset === 0 ? null : s) : null,\n    R.ifElse(\n      R.equals(0),\n      R.always(null),\n      setSelection\n    )\n  )\n\n  return (\n    <>\n      <Container disableGutters maxWidth=\"xl\" style={{ padding: '1rem', flex: '1' }}>\n        <Grid container direction=\"column\" justify=\"space-evenly\" spacing={2}>\n          <Grid item children=\n            {\n              <AnnotationText\n                text={text}\n                hasSelection={!selection}\n                handleSelection={handleSelection}\n                handleAdd={() => handleAdd(selection)}\n              />\n            } style={{ flexGrow: 1 }} />\n          <Grid item children=\n            {\n              <AnnotationList annotations={annotation} handleDelete={handleDelete} handleAdd={handleAdd} />\n            } style={{ flexGrow: 1 }} />\n        </Grid>\n      </Container>\n    </>\n  );\n}\n","import React from 'react'\n\nimport Button from '@material-ui/core/Button'\nimport CloudUpload from '@material-ui/icons/CloudUpload'\n\ntype FileUploaderProps = {\n  handleUpload: any\n}\n\nexport const FileUploader: React.FC<FileUploaderProps> = props => {\n  return (\n    <>\n      <input\n        accept=\"text/*\"\n        id=\"upload-files\"\n        multiple\n        type=\"file\"\n        style={{ display: 'none' }}\n        onInput={props.handleUpload}\n      />\n      <label htmlFor=\"upload-files\" >\n        <Button variant=\"contained\" component=\"span\">\n          <CloudUpload />\n        </Button>\n      </label>\n    </>\n  )\n}\n","import React, { useState } from 'react'\nimport Avatar from '@material-ui/core/Avatar'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Button from '@material-ui/core/Button'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport List from '@material-ui/core/List'\n\nimport MenuIcon from '@material-ui/icons/Menu'\nimport DoneIcon from '@material-ui/icons/Done'\nimport NoteIcon from '@material-ui/icons/Note'\nimport TurnetInIcon from '@material-ui/icons/TurnedIn'\n\n\ntype FilePickerProps = {\n  files: Array<{\n    filename: string,\n    touched: boolean\n  }>\n  currentFile: string\n  handleSelect: (f: string) => void\n}\n  \nexport const FilePicker: React.FC<FilePickerProps> = ({handleSelect, files, currentFile}) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const handleClick = () => setIsOpen(true)\n  const handleClose = () => setIsOpen(false)\n  return (\n    <>\n      <Button onClick={handleClick} variant=\"contained\"><MenuIcon /></Button>\n      <Dialog onClose={handleClose} open={isOpen}>\n        <DialogTitle>Textos:</DialogTitle>\n        <List>\n          {\n            files.map((f: any) => \n              <CustomListItem \n                key={f.filename}\n                handleSelect={(f: string) => {\n                  setIsOpen(false)\n                  handleSelect(f)\n                }}\n                filename={f.filename}\n                touched={f.touched}\n                currentFile={currentFile}\n              />\n            )\n          }\n        </List>\n      </Dialog>\n    </>\n  )\n}\n\ntype CustomListItemProps = {\n  filename: string,\n  handleSelect: (f: string) => void,\n  touched: boolean,\n  currentFile: string\n}\n\nconst CustomListItem: React.FC<CustomListItemProps> = ({handleSelect, filename, touched, currentFile}) => {\n  return (\n    <ListItem \n      autoFocus \n      button\n      onClick={() => handleSelect(filename)}  \n    >\n      <ListItemAvatar>\n        <Avatar>\n          <NoteIcon />\n        </Avatar>\n      </ListItemAvatar>\n      <ListItemText primary={filename}/>\n      {\n        currentFile === filename \n        ? <TurnetInIcon />\n        : touched \n          ? <DoneIcon style={{color: 'green', marginLeft: '16px'}}/> \n          : <></>\n      }\n    </ListItem>\n  )\n}","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport AppBar from '@material-ui/core/AppBar'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\nimport {FilePicker} from './helpers/FilePicker'\nimport {FileUploader} from './helpers/FileUploader'\n\ntype TopbarProps = {\n  handleUpload: (a: any) => void,\n  handleFileSelect: (f: string) => void\n  files: Array<{\n    filename: string,\n    touched: boolean\n  }>\n  currentFile: string\n}\n\nexport const TopBar: React.FC<TopbarProps> = ({handleFileSelect, handleUpload, files, currentFile}) => {\n  return (\n    <AppBar position=\"static\">\n      <Grid container wrap=\"nowrap\" justify=\"space-between\" style={{ padding: \"0.5rem\" }}>\n        <Grid item children={<Typography align=\"center\" variant=\"h4\" children=\"FAMA\" />} />\n        <Grid item container justify=\"flex-end\" spacing={1}>\n          <Grid item children={<FilePicker currentFile={currentFile} handleSelect={handleFileSelect} files={files} />} />\n          <Grid item children={<FileUploader handleUpload={handleUpload} />} />\n          <Grid item children={<Button variant='contained'>Ajuda</Button>} />\n          <Grid item children={<Button variant=\"contained\" children=\"LOGOUT\" />} />\n        </Grid>\n      </Grid>\n    </AppBar>\n  );\n}","import React, { useState, useEffect } from 'react'\n\nimport Grid from '@material-ui/core/Grid'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport Dialog from '@material-ui/core/Dialog'\n\nimport { Annotator } from './Annotator'\nimport { FileUploader } from './helpers/FileUploader'\nimport { TopBar } from './TopBar'\n\n\nexport const App: React.FC = () => {\n  const [files, setFiles] = useState<any[]>([])\n  const [selectedFile, setSelectedFile] = useState<any>(null)\n  const [annotation, setAnnotation] = useState([])\n\n  useEffect(() => {\n    if (selectedFile === null) return\n    if (selectedFile.text !== null) return\n\n    const readFile = (f: File) => {\n      const r = new FileReader()\n      r.onload = () => {\n        setFiles(files.map(f => f.id === selectedFile.id ? {...f, text: r.result}: f))\n        setSelectedFile({...selectedFile, text: r.result})\n      }\n      r.readAsText(f)\n    }\n    readFile(selectedFile.file)\n  }, [selectedFile])\n\n  useEffect(() => {\n    if (selectedFile === null) return\n    setSelectedFile(\n      {\n        ...selectedFile, \n        annotation: annotation\n      })\n  }, [annotation])\n\n  const handleAdd = (selection: string) => {\n    const text = selection ? String(selection) : \"\"\n    const newAnnotations = [\n      ...annotation, \n      {\n        id: annotation.length + 1,\n        text: text, \n        first: null, \n        second: null, \n        third: null\n      }\n    ]\n    setAnnotation(newAnnotations)\n  }\n\n  const handleDelete = (id: number) => {\n    const newAnnotations = annotation.filter(a => a.id !== id)\n    setAnnotation(newAnnotations)\n  }\n\n  const handleUpload = ({ target: { files } }: any) => {\n    files = Array.from(files).map((f, idx) => ({\n      id: idx,\n      file: f, \n      touched: false, \n      text: null,\n      annotation: []\n    })).sort((a, b) => a.id < b.id ? -1 : 1)\n\n    setFiles(files)\n    setSelectedFile(files[0])\n  }\n\n  const handleFileSelect = (filename: string) => {\n    setFiles(\n      files\n        .map(f => f.id === selectedFile.id ? {...f, ...selectedFile, touched: true} : f)\n        .sort((a, b) => a.id < b.id ? -1 : 1)\n    )\n    const newFile = files.find(f => f.file.name === filename)\n    setSelectedFile(newFile)\n  }\n\n  return (\n    <>\n      <TopBar\n        handleUpload={handleUpload}\n        handleFileSelect={handleFileSelect}\n        files={files.map((f: any) => ({ filename: f.file.name, touched: f.touched }))}\n        currentFile={selectedFile ? selectedFile.file.name : null}\n      />\n      {\n        selectedFile === null\n          ? <BigUpload \n              handleUpload={handleUpload}\n            />\n          : <Annotator \n              annotation={selectedFile.annotation}\n              handleAdd={handleAdd}\n              handleDelete={handleDelete}\n              text={selectedFile.text}\n            />\n      }\n\n    </>\n  )\n}\n\ntype BigUploadProps = {\n  handleUpload: ({ target: { files } }: any) => void\n}\n\nconst BigUpload: React.FC<BigUploadProps> = ({handleUpload}) => {\n  return (\n    <Dialog open={true} >\n      <Grid >\n        <Card>\n          <CardHeader \n            title=\"Envie arquivos para anotar\"\n            style={{margin: \"32px 16px\"}}\n          />\n          <CardContent>\n            <Grid container justify=\"center\">\n              <Grid item children={<FileUploader handleUpload={handleUpload} />}/>\n            </Grid>\n        </CardContent>\n        </Card>\n      </Grid>\n    </Dialog>\n  )\n} \n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'typeface-roboto'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}