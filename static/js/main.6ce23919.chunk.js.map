{"version":3,"sources":["components/AnnotationText.tsx","components/Annotation/Annotation.tsx","components/Annotation/AnnotationList.tsx","utils/annotationReducer.tsx","components/Annotator.tsx","components/helpers/FileUploader.tsx","components/helpers/FilePicker.tsx","components/TopBar.tsx","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["AnnotationText","text","handleSelection","hasSelection","handleAdd","onSelection","onAdd","Text","Paper","style","padding","Grid","container","direction","item","children","Typography","onDoubleClick","onMouseUp","justify","Button","variant","onClick","disabled","CustomSelect","props","FormControl","minWidth","InputLabel","inputLabel","Select","MenuItem","CustomTextInput","TextField","label","defaultValue","Annotation","wrap","spacing","flex","Tooltip","title","Checkbox","color","marginLeft","dispatch","type","id","AnnotationList","annotations","map","a","key","ActionBar","AppBar","position","size","idGenerator","incrementor","i","state","action","next","value","filter","Error","Annotator","file","useReducer","annotationReducer","useState","selection","setSelection","R","window","getSelection","s","anchorOffset","focusOffset","Container","disableGutters","maxWidth","String","flexGrow","FileUploader","accept","multiple","display","onInput","handleUpload","htmlFor","component","FilePicker","handleSelect","files","currentFile","isOpen","setIsOpen","Dialog","onClose","open","DialogTitle","List","f","filename","touched","CustomListItem","ListItem","autoFocus","button","ListItemAvatar","Avatar","ListItemText","primary","TopBar","handleFileSelect","align","BigUpload","Card","CardHeader","margin","CardContent","Boolean","location","hostname","match","ReactDOM","render","setFiles","selectedFile","setSelectedFile","useEffect","r","FileReader","onload","result","readAsText","readFile","target","Array","from","idx","annotation","sort","b","find","name","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6ce23919.chunk.js","sourcesContent":["import React, { useRef, Dispatch, SetStateAction, RefObject } from 'react';\nimport * as R from 'rambda'\nimport {\n  Button,\n  Grid,\n  Paper,\n  Typography,\n  AppBar\n} from '@material-ui/core'\n\ntype AnnotationTextProps = {\n  text: string\n  handleSelection: (s: React.MouseEvent<HTMLElement, MouseEvent>) => void\n  hasSelection: boolean\n  handleAdd: () => void\n}\n\nexport const AnnotationText: React.FC<AnnotationTextProps> = ({text, handleSelection, hasSelection, handleAdd}) => {\n\n\n  return (\n    <Text \n      onSelection={handleSelection}\n      onAdd={handleAdd}\n      text={text}\n      hasSelection={hasSelection}\n    />\n  )\n}\n\ntype TextProps = {\n  onSelection: (s: React.MouseEvent<HTMLElement, MouseEvent>) => void,\n  onAdd: () => void,\n  text: string,\n  hasSelection: boolean\n}\n\nexport const Text: React.FC<TextProps> = ({onSelection, hasSelection, text, onAdd}) => {\n  \n\n  return (\n    <Paper style={{ padding: '1rem' }}>\n      <Grid container direction=\"column\">\n        <Grid item  children=\n          {\n            <Typography onDoubleClick={onSelection} onMouseUp={onSelection}>\n              {text}\n            </Typography>\n          }\n        />\n        <Grid item children=\n          {\n              <Grid container justify=\"flex-end\" >\n                <Grid item children=\n                  {\n                    <Button \n                      variant=\"outlined\" \n                      onClick={onAdd} \n                      disabled={hasSelection} \n                      children=\"Adicionar Seleção\" />\n                  } \n                />\n                  \n              </Grid>\n          }\n        />\n      </Grid>\n    </Paper>\n  );\n}\n\n","import React from 'react';\nimport Delete from '@material-ui/icons/Delete'\nimport {\n  Checkbox,\n  Grid,\n  InputLabel,\n  MenuItem,\n  FormControl, \n  Select,\n  TextField,\n  Tooltip,\n  Button\n} from '@material-ui/core'\n\ntype AnnotationProps = {\n  dispatch: (a: any) => void\n  id: number\n  defaultValue: String\n}\n\nconst Annotation: React.FC<AnnotationProps> = props => {\n  return (\n    <Grid container wrap=\"nowrap\" justify=\"space-between\" spacing={2}>\n      <Grid item container wrap=\"nowrap\" justify=\"space-around\" spacing={2} style={{ flex: '2' }}>\n        <Grid item children={<CustomSelect inputLabel=\"Nível 1\" />} style={{ flex: \"1\" }} />\n        <Grid item children={<CustomSelect inputLabel=\"Nível 2\" />} style={{ flex: \"1\" }} />\n        <Grid item children={<CustomSelect inputLabel=\"Nível 3\" />} style={{ flex: \"1\" }} />\n      </Grid>\n      <Grid item container justify=\"space-between\" wrap=\"nowrap\"  style={{flex: '1'}}>\n        <Grid item children={<CustomTextInput defaultValue={props.defaultValue}/>} style={{ flex: '3' }}/>\n        <Grid item container justify=\"center\" style={{flex: '1'}}>\n          <Grid item> \n            <Tooltip title=\"Explícito\">\n              <Checkbox color='primary' style={{flex: '1', marginLeft: '0px'}}/>\n            </Tooltip>\n          </Grid>\n          <Grid item>\n              <Tooltip title=\"Deletar\">\n                <Button \n                  onClick={() => props.dispatch({type: 'delete', id: props.id})}\n                  children={<Delete />} \n                />\n              </Tooltip>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n\ntype CustomSelectProps = {\n  inputLabel: string\n}\n\nconst CustomSelect: React.FC<CustomSelectProps> = props => {\n  return (\n    <FormControl style={{ minWidth: '100%' }}>\n      <InputLabel>{props.inputLabel}</InputLabel>\n      <Select>\n        <MenuItem>Um</MenuItem>\n        <MenuItem>Dois</MenuItem>\n        <MenuItem>Três</MenuItem>\n      </Select>\n    </FormControl>\n  )\n}\n\ntype CustomTextInputProps = {\n  defaultValue?: String\n}\n\nconst CustomTextInput: React.FC<CustomTextInputProps> = props => {\n  return (\n    <FormControl style={{ minWidth: '100%' }}>\n      <TextField label=\"Digite Aqui\" defaultValue={props.defaultValue}/>\n    </FormControl>\n  )\n}\n\nexport default Annotation;","import React, { useReducer } from 'react';\nimport * as R from 'rambda'\nimport Add from '@material-ui/icons/Add'\nimport Save from '@material-ui/icons/Save'\n\nimport {\n  Button,\n  Paper,\n  Grid,\n  AppBar\n} from '@material-ui/core'\n\nimport Annotation from './Annotation'\n\n\ntype AnnotationListProps = {\n  dispatch: any\n  annotations: any\n}\n\nexport const AnnotationList: React.FC<AnnotationListProps> = props => {\n  return (\n    <>\n      <ActionBar dispatch={props.dispatch} />\n      <Paper style={{ padding: '1rem' }}>\n        {\n          props.annotations.map((a: any) =>\n            <Annotation key={a.id} id={a.id} dispatch={props.dispatch} defaultValue={a.text}/>)\n        }\n      </Paper>\n    </>\n  );\n}\n\ntype ActionBarProps = {\n  dispatch: (a: any) => void\n}\n\nconst ActionBar: React.FC<ActionBarProps> = props => {\n  return (\n    <AppBar position=\"static\" color='default' style={{ padding: '1rem' }}>\n      <Grid container wrap=\"nowrap\" justify=\"space-between\">\n        <Grid item children=\n          {\n            <Button\n              onClick={() => props.dispatch({ type: 'save' })}\n              size=\"small\"\n              variant='outlined'\n              color=\"primary\">\n              <Save />\n            </Button>\n          }\n        />\n        <Grid item children=\n          {\n            <Button\n              onClick={() => props.dispatch({ type: 'add' })}\n              size=\"small\"\n              variant='outlined'\n              color=\"secondary\">\n              <Add />\n            </Button>\n          }\n        />\n      </Grid>\n    </AppBar>\n  );\n}\n","const incrementor = function* () {\n    let i = 0\n    while (++i) { yield i }\n  }\nconst idGenerator = incrementor()\n\nexport default (state: any, action: any) => {\n    switch (action.type) {\n      case 'add':\n        return [...state, { id: idGenerator.next().value, text: action.text || ''}]\n      case 'delete': return state.filter((a: any) => action.id !== a.id)\n      case 'save': return []\n      default: throw new Error('Invalid action ' + action)\n    }\n  }","import React, { useState, useReducer } from 'react';\nimport { loremIpsum } from 'lorem-ipsum'\nimport * as R from 'rambda'\n\nimport {\n  Container,\n  Grid,\n} from '@material-ui/core'\n\nimport {AnnotationText} from './AnnotationText'\nimport {AnnotationList} from './Annotation/AnnotationList'\nimport annotationReducer from '../utils/annotationReducer'\n\ntype AnnotatorProps = {\n  file: any,\n  text: string\n}\n\nexport const Annotator: React.FC<AnnotatorProps> = ({file, text}) => {\n  const [annotations, dispatch] = useReducer(annotationReducer, [])\n  const [selection, setSelection] = useState<Selection | null>(null);\n\n  const handleAdd = () => {\n    dispatch({ type: 'add', text: String(selection) })\n  }\n\n  const handleSelection = R.pipe(\n    window.getSelection,\n    s => s ? (s.anchorOffset - s.focusOffset === 0 ? null : s) : null,\n    R.ifElse(\n      R.equals(0),\n      R.always(null),\n      setSelection\n    )\n  )\n\n  return (\n    <>\n      <Container disableGutters maxWidth=\"xl\" style={{ padding: '1rem', flex: '1' }}>\n        <Grid container direction=\"column\" justify=\"space-evenly\" spacing={2}>\n          <Grid item children=\n            {\n              <AnnotationText\n                text={text}\n                hasSelection={!selection}\n                handleSelection={handleSelection}\n                handleAdd={handleAdd}\n              />\n            } style={{ flexGrow: 1 }} />\n          <Grid item children=\n            {\n              <AnnotationList annotations={annotations} dispatch={dispatch} />\n            } style={{ flexGrow: 1 }} />\n        </Grid>\n      </Container>\n    </>\n  );\n}\n","import React from 'react'\n\nimport Button from '@material-ui/core/Button'\nimport CloudUpload from '@material-ui/icons/CloudUpload'\n\ntype FileUploaderProps = {\n  handleUpload: any\n}\n\nexport const FileUploader: React.FC<FileUploaderProps> = props => {\n  return (\n    <>\n      <input\n        accept=\"text/*\"\n        id=\"upload-files\"\n        multiple\n        type=\"file\"\n        style={{ display: 'none' }}\n        onInput={props.handleUpload}\n      />\n      <label htmlFor=\"upload-files\" >\n        <Button variant=\"contained\" component=\"span\">\n          <CloudUpload />\n        </Button>\n      </label>\n    </>\n  )\n}\n","import React, { useState } from 'react'\nimport Avatar from '@material-ui/core/Avatar'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Button from '@material-ui/core/Button'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport List from '@material-ui/core/List'\n\nimport MenuIcon from '@material-ui/icons/Menu'\nimport DoneIcon from '@material-ui/icons/Done'\nimport NoteIcon from '@material-ui/icons/Note'\nimport TurnetInIcon from '@material-ui/icons/TurnedIn'\n\n\ntype FilePickerProps = {\n  files: Array<{\n    filename: string,\n    touched: boolean\n  }>\n  currentFile: string\n  handleSelect: (f: string) => void\n}\n  \nexport const FilePicker: React.FC<FilePickerProps> = ({handleSelect, files, currentFile}) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const handleClick = () => setIsOpen(true)\n  const handleClose = () => setIsOpen(false)\n  return (\n    <>\n      <Button onClick={handleClick} variant=\"contained\"><MenuIcon /></Button>\n      <Dialog onClose={handleClose} open={isOpen}>\n        <DialogTitle>Textos:</DialogTitle>\n        <List>\n          {\n            files.map((f: any) => \n              <CustomListItem \n                handleSelect={(f: string) => {\n                  setIsOpen(false)\n                  handleSelect(f)\n                }}\n                filename={f.filename}\n                touched={f.touched}\n                currentFile={currentFile}\n              />\n            )\n          }\n        </List>\n      </Dialog>\n    </>\n  )\n}\n\ntype CustomListItemProps = {\n  filename: string,\n  handleSelect: (f: string) => void,\n  touched: boolean,\n  currentFile: string\n}\n\nconst CustomListItem: React.FC<CustomListItemProps> = ({handleSelect, filename, touched, currentFile}) => {\n  return (\n    <ListItem \n      autoFocus \n      button\n      onClick={() => handleSelect(filename)}  \n    >\n      <ListItemAvatar>\n        <Avatar>\n          <NoteIcon />\n        </Avatar>\n      </ListItemAvatar>\n      <ListItemText primary={filename}/>\n      {\n        currentFile === filename \n        ? <TurnetInIcon />\n        : touched \n          ? <DoneIcon style={{color: 'green', marginLeft: '16px'}}/> \n          : <></>\n      }\n    </ListItem>\n  )\n}","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport AppBar from '@material-ui/core/AppBar'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\nimport {FilePicker} from './helpers/FilePicker'\nimport {FileUploader} from './helpers/FileUploader'\n\ntype TopbarProps = {\n  handleUpload: (a: any) => void,\n  handleFileSelect: (f: string) => void\n  files: Array<{\n    filename: string,\n    touched: boolean\n  }>\n  currentFile: string\n}\n\nexport const TopBar: React.FC<TopbarProps> = ({handleFileSelect, handleUpload, files, currentFile}) => {\n  return (\n    <AppBar position=\"static\">\n      <Grid container wrap=\"nowrap\" justify=\"space-between\" style={{ padding: \"0.5rem\" }}>\n        <Grid item children={<Typography align=\"center\" variant=\"h4\" children=\"FAMA\" />} />\n        <Grid item container justify=\"flex-end\" spacing={1}>\n          <Grid item children={<FilePicker currentFile={currentFile} handleSelect={handleFileSelect} files={files} />} />\n          <Grid item children={<FileUploader handleUpload={handleUpload} />} />\n          <Grid item children={<Button variant='contained'>Ajuda</Button>} />\n          <Grid item children={<Button variant=\"contained\" children=\"LOGOUT\" />} />\n        </Grid>\n      </Grid>\n    </AppBar>\n  );\n}","import React, { useState, useEffect } from 'react'\n\nimport Grid from '@material-ui/core/Grid'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardActionArea from '@material-ui/core/CardActionArea'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport Dialog from '@material-ui/core/Dialog'\n\nimport { Annotator } from './Annotator'\nimport { FileUploader } from './helpers/FileUploader'\nimport { TopBar } from './TopBar'\n\n\nexport const App: React.FC = () => {\n  const [files, setFiles] = useState<any[]>([])\n  const [selectedFile, setSelectedFile] = useState<any>(null)  \n\n  useEffect(() => {\n    if (selectedFile === null) return\n    if (selectedFile.text !== null) return\n\n    const readFile = (f: File) => {\n      const r = new FileReader()\n      r.onload = () => {\n        setFiles(files.map(f => f.id === selectedFile.id ? {...f, text: r.result}: f))\n        setSelectedFile({...selectedFile, text: r.result})\n      }\n      r.readAsText(f)\n    }\n    readFile(selectedFile.file)\n  }, [selectedFile])\n\n  const handleUpload = ({ target: { files } }: any) => {\n    files = Array.from(files).map((f, idx) => ({\n      id: idx,\n      file: f, \n      touched: false, \n      text: null,\n      annotation: {}\n    })).sort((a, b) => a.id < b.id ? -1 : 1)\n\n    setFiles(files)\n    setSelectedFile(files[0])\n  }\n\n  const handleFileSelect = (filename: string) => {\n    setFiles(\n      files\n        .map(f => f.id === selectedFile.id ? {...f, ...selectedFile, touched: true} : f)\n        .sort((a, b) => a.id < b.id ? -1 : 1)\n    )\n    setSelectedFile(files.find(f => f.file.name === filename))\n  }\n\n  return (\n    <>\n      <TopBar\n        handleUpload={handleUpload}\n        handleFileSelect={handleFileSelect}\n        files={files.map((f: any) => ({ filename: f.file.name, touched: f.touched }))}\n        currentFile={selectedFile ? selectedFile.file.name : null}\n      />\n      {\n        selectedFile === null\n          ? <BigUpload \n              handleUpload={handleUpload}\n            />\n          : <Annotator \n              file={selectedFile}\n              text={selectedFile.text}\n            />\n      }\n\n    </>\n  )\n}\n\ntype BigUploadProps = {\n  handleUpload: ({ target: { files } }: any) => void\n}\n\nconst BigUpload: React.FC<BigUploadProps> = ({handleUpload}) => {\n  return (\n    <Dialog open={true} >\n      <Grid >\n        <Card>\n          <CardHeader \n            title=\"Envie arquivos para anotar\"\n            style={{margin: \"32px 16px\"}}\n          />\n          <CardContent>\n            <Grid container justify=\"center\">\n              <Grid item children={<FileUploader handleUpload={handleUpload} />}/>\n            </Grid>\n        </CardContent>\n        </Card>\n      </Grid>\n    </Dialog>\n  )\n} \n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'typeface-roboto'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}