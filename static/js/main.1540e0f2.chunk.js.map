{"version":3,"sources":["components/AnnotationText.tsx","components/Annotation/Annotation.tsx","components/Annotation/AnnotationList.tsx","utils/annotationReducer.tsx","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["AnnotationText","props","handleMouseSelection","R","window","getSelection","s","anchorOffset","focusOffset","setSelection","Paper","style","padding","Grid","container","direction","item","children","Typography","onDoubleClick","onMouseUp","text","justify","Button","variant","onClick","onAdd","disabled","selection","CustomSelect","FormControl","minWidth","InputLabel","inputLabel","Select","MenuItem","CustomTextInput","TextField","label","defaultValue","Annotation","wrap","spacing","flex","Tooltip","title","Checkbox","color","marginLeft","dispatch","type","id","ActionBar","AppBar","position","size","AnnotationList","annotations","map","a","key","idGenerator","incrementor","i","state","action","next","value","filter","Error","TopBar","align","files","handleUpload","FileUploader","accept","multiple","display","onInput","htmlFor","component","FilePicker","useState","isOpen","setIsOpen","Dialog","onClose","open","DialogTitle","List","f","ListItem","autoFocus","button","ListItemAvatar","Avatar","ListItemText","primary","filename","touched","App","setFiles","loremIpsum","count","useReducer","annotationReducer","target","console","log","Array","from","file","annotation","name","Container","disableGutters","maxWidth","String","flexGrow","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1540e0f2.chunk.js","sourcesContent":["import React, { useRef, Dispatch, SetStateAction, RefObject } from 'react';\nimport * as R from 'rambda'\nimport {\n  Button,\n  Grid,\n  Paper,\n  Typography,\n  AppBar\n} from '@material-ui/core'\n\ntype AnnotationTextProps = {\n  text: String\n  selection: Selection | null\n  setSelection: (s: (Selection | null)) => void\n  onAdd: any\n}\n\nconst AnnotationText: React.FC<AnnotationTextProps> = props => {\n  const handleMouseSelection = R.pipe(\n    window.getSelection,\n    s => s ? (s.anchorOffset - s.focusOffset === 0 ? null : s) : null,\n    R.ifElse(\n      R.equals(0),\n      R.always(null),\n      props.setSelection\n    )\n  )\n\n  return (\n    <Paper style={{ padding: '1rem' }}>\n      <Grid container direction=\"column\">\n        <Grid item  children=\n          {\n            <Typography onDoubleClick={handleMouseSelection} onMouseUp={handleMouseSelection}>\n              {props.text}\n            </Typography>\n          }\n        />\n        <Grid item children=\n          {\n              <Grid container justify=\"flex-end\" >\n                <Grid item children=\n                  {\n                    <Button \n                      variant=\"outlined\" \n                      onClick={props.onAdd} \n                      disabled={!props.selection} \n                      children=\"Adicionar Seleção\" />\n                  } \n                />\n                  \n              </Grid>\n          }\n        />\n      </Grid>\n    </Paper>\n  );\n}\n\nexport default AnnotationText;\n","import React from 'react';\nimport Delete from '@material-ui/icons/Delete'\nimport {\n  Checkbox,\n  Grid,\n  InputLabel,\n  MenuItem,\n  FormControl, \n  Select,\n  TextField,\n  Tooltip,\n  Button\n} from '@material-ui/core'\n\ntype AnnotationProps = {\n  dispatch: (a: any) => void\n  id: number\n  defaultValue: String\n}\n\nconst Annotation: React.FC<AnnotationProps> = props => {\n  return (\n    <Grid container wrap=\"nowrap\" justify=\"space-between\" spacing={2}>\n      <Grid item container wrap=\"nowrap\" justify=\"space-around\" spacing={2} style={{ flex: '2' }}>\n        <Grid item children={<CustomSelect inputLabel=\"Nível 1\" />} style={{ flex: \"1\" }} />\n        <Grid item children={<CustomSelect inputLabel=\"Nível 2\" />} style={{ flex: \"1\" }} />\n        <Grid item children={<CustomSelect inputLabel=\"Nível 3\" />} style={{ flex: \"1\" }} />\n      </Grid>\n      <Grid item container justify=\"space-between\" wrap=\"nowrap\"  style={{flex: '1'}}>\n        <Grid item children={<CustomTextInput defaultValue={props.defaultValue}/>} style={{ flex: '3' }}/>\n        <Grid item container justify=\"center\" style={{flex: '1'}}>\n          <Grid item> \n            <Tooltip title=\"Explícito\">\n              <Checkbox color='primary' style={{flex: '1', marginLeft: '0px'}}/>\n            </Tooltip>\n          </Grid>\n          <Grid item>\n              <Tooltip title=\"Deletar\">\n                <Button \n                  onClick={() => props.dispatch({type: 'delete', id: props.id})}\n                  children={<Delete />} \n                />\n              </Tooltip>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n\ntype CustomSelectProps = {\n  inputLabel: string\n}\n\nconst CustomSelect: React.FC<CustomSelectProps> = props => {\n  return (\n    <FormControl style={{ minWidth: '100%' }}>\n      <InputLabel>{props.inputLabel}</InputLabel>\n      <Select>\n        <MenuItem>Um</MenuItem>\n        <MenuItem>Dois</MenuItem>\n        <MenuItem>Três</MenuItem>\n      </Select>\n    </FormControl>\n  )\n}\n\ntype CustomTextInputProps = {\n  defaultValue?: String\n}\n\nconst CustomTextInput: React.FC<CustomTextInputProps> = props => {\n  return (\n    <FormControl style={{ minWidth: '100%' }}>\n      <TextField label=\"Digite Aqui\" defaultValue={props.defaultValue}/>\n    </FormControl>\n  )\n}\n\nexport default Annotation;","import React, { useReducer } from 'react';\nimport * as R from 'rambda'\nimport Add from '@material-ui/icons/Add'\nimport Save from '@material-ui/icons/Save'\n\nimport {\n  Button,\n  Paper,\n  Grid,\n  AppBar\n} from '@material-ui/core'\n\nimport Annotation from './Annotation'\n\n\ntype AnnotationListProps = {\n  dispatch: any\n  annotations: any\n}\n\nconst AnnotationList: React.FC<AnnotationListProps> = props => {\n  return (\n    <>\n      <ActionBar dispatch={props.dispatch} />\n      <Paper style={{ padding: '1rem' }}>\n        {\n          props.annotations.map((a: any) =>\n            <Annotation key={a.id} id={a.id} dispatch={props.dispatch} defaultValue={a.text}/>)\n        }\n      </Paper>\n    </>\n  );\n}\n\ntype ActionBarProps = {\n  dispatch: (a: any) => void\n}\n\nconst ActionBar: React.FC<ActionBarProps> = props => {\n  return (\n    <AppBar position=\"static\" color='default' style={{ padding: '1rem' }}>\n      <Grid container wrap=\"nowrap\" justify=\"space-between\">\n        <Grid item children=\n          {\n            <Button\n              onClick={() => props.dispatch({ type: 'save' })}\n              size=\"small\"\n              variant='outlined'\n              color=\"primary\">\n              <Save />\n            </Button>\n          }\n        />\n        <Grid item children=\n          {\n            <Button\n              onClick={() => props.dispatch({ type: 'add' })}\n              size=\"small\"\n              variant='outlined'\n              color=\"secondary\">\n              <Add />\n            </Button>\n          }\n        />\n      </Grid>\n    </AppBar>\n  );\n}\n\nexport default AnnotationList;","const incrementor = function* () {\n    let i = 0\n    while (++i) { yield i }\n  }\nconst idGenerator = incrementor()\n\nexport default (state: any, action: any) => {\n    switch (action.type) {\n      case 'add':\n        return [...state, { id: idGenerator.next().value, text: action.text || ''}]\n      case 'delete': return state.filter((a: any) => action.id !== a.id)\n      case 'save': return []\n      default: throw new Error('Invalid action ' + action)\n    }\n  }","import React, { useState, useReducer, SetStateAction, SyntheticEvent } from 'react';\nimport { loremIpsum } from 'lorem-ipsum'\n\nimport Note from '@material-ui/icons/Note'\nimport CloudUpload from '@material-ui/icons/CloudUpload'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport Done from '@material-ui/icons/Done'\nimport {\n  AppBar,\n  Button,\n  Typography,\n  Container,\n  Grid,\n  Dialog,\n  DialogTitle,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Avatar\n} from '@material-ui/core'\n\nimport AnnotationText from './AnnotationText'\nimport AnnotationList from './Annotation/AnnotationList'\nimport annotationReducer from '../utils/annotationReducer'\n\nconst App: React.FC = () => {\n  const [files, setFiles] = useState<SetStateAction<any>>([])\n\n\n  const [text, setText] = useState(loremIpsum({ count: 30 }))\n  const [annotations, dispatch] = useReducer(annotationReducer, [])\n  const [selection, setSelection] = useState<SetStateAction<Selection | null>>(null);\n\n  const handleAdd = () => {\n    console.log(selection)\n    dispatch({ type: 'add', text: String(selection) })\n  }\n\n  const handleUpload = ({ target: { files } }: any) => {\n    const readFile = async (f: File) => {\n      const r = new FileReader()\n      r.onload = () => {\n        setText(r.result as string)\n      }\n      r.readAsText(f)\n    }\n    console.log(files)\n    setFiles(Array.from(files).map((f: any) => ({\n      file: f, touched: false, annotation: {}\n    })))\n  }\n\n  return (\n    <>\n      <TopBar handleUpload={handleUpload} files={files.map((f: any) => ({filename: f.file.name, touched: f.touched}))} />\n      <Container disableGutters maxWidth=\"xl\" style={{ padding: '1rem', flex: '1' }}>\n        <Grid container direction=\"column\" justify=\"space-evenly\" spacing={2}>\n          <Grid item children=\n            {\n              <AnnotationText\n                text={text}\n                selection={selection as Selection | null}\n                setSelection={setSelection}\n                onAdd={handleAdd}\n              />\n            } style={{ flexGrow: 1 }} />\n          <Grid item children=\n            {\n              <AnnotationList annotations={annotations} dispatch={dispatch} />\n            } style={{ flexGrow: 1 }} />\n        </Grid>\n      </Container>\n    </>\n  );\n}\n\n\ntype TopbarProps = {\n  handleUpload: (a: any) => void,\n  files: Array<{\n    filename: string,\n    touched: boolean\n  }>\n}\n\nconst TopBar: React.FC<TopbarProps> = props => {\n  return (\n    <AppBar position=\"static\">\n      <Grid container wrap=\"nowrap\" justify=\"space-between\" style={{ padding: \"0.5rem\" }}>\n        <Grid item children={<Typography align=\"center\" variant=\"h4\" children=\"FAMA\" />} />\n        <Grid item container justify=\"flex-end\" spacing={1}>\n          <Grid item children={<FilePicker files={props.files}/>} />\n          <Grid item children={<FileUploader handleUpload={props.handleUpload}/>}/>\n          <Grid item children={<Button variant='contained'>Ajuda</Button>} />\n          <Grid item children={<Button variant=\"contained\" children=\"LOGOUT\"/>} />\n        </Grid>\n      </Grid>\n    </AppBar>\n  );\n}\n\ntype FileUploaderProps = {\n  handleUpload: any\n}\n\nconst FileUploader: React.FC<FileUploaderProps> = props => {\n  return (\n    <>\n      <input\n        accept=\"text/*\"\n        id=\"upload-files\"\n        multiple\n        type=\"file\"\n        style={{ display: 'none' }}\n        onInput={props.handleUpload}\n      />\n      <label htmlFor=\"upload-files\" >\n        <Button variant=\"contained\" component=\"span\">\n          <CloudUpload />\n        </Button>\n      </label>\n    </>\n  )\n}\n\ntype FilePickerProps = {\n  files: Array<{\n    filename: string,\n    touched: boolean\n  }>\n}\n\nconst FilePicker: React.FC<FilePickerProps> = props => {\n  const [isOpen, setIsOpen] = useState(false)\n  const handleClick = () => setIsOpen(true)\n  const handleClose = () => setIsOpen(false)\n\n  return (\n    <>\n      <Button onClick={handleClick} variant=\"contained\"><MenuIcon /></Button>\n      <Dialog onClose={handleClose} open={isOpen}>\n        <DialogTitle>Textos:</DialogTitle>\n        <List>\n          {\n            props.files.map((f: any) => \n              <ListItem autoFocus button>\n                <ListItemAvatar>\n                  <Avatar>\n                    <Note />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText primary={f.filename}/>\n                {f.touched ? <Done style={{color: 'green', marginLeft: '16px'}}/> : <></>}\n              </ListItem>\n            )\n          }\n        </List>\n      </Dialog>\n    </>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'typeface-roboto'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}